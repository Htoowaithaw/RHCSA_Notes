System Backups Using dd
1. Overview of Backup Types

There are five main types of backups every system administrator should know. Each type serves a different purpose depending on what you need to protect and restore.

a) Entire System Backup

Creates a full image of the entire system, like an ISO snapshot.

Used when you need to restore the whole OS, applications, and data exactly as it was.

Typically done using third-party tools:

Acronis

Veeam

Commvault

NetBackup

Restores are done to the same hardware or to a new replacement system.

b) Application Backup

Focuses on specific installed applications rather than the OS or files.

Example: You have a Linux server running a specific app such as Apache or SAP.

Usually managed by dedicated third-party tools that understand how the application stores data and configs.

c) Database Backup

Dedicated to backing up database systems, not the OS or app files.

Examples:

Oracle → Uses Dataguard.

SQL → Has its own SQL backup tools.

Only backs up data generated by the database, not the file system structure.

d) File System Backup

Backing up specific files and directories.

Commonly done using native Linux commands:

tar → Create archive.

gzip → Compress archive.

Example workflow:

Create a .tar.gz file of /home/user.

Transfer it to another server for safekeeping.

Useful for quick restores of files without needing full system recovery.

Third-party tools can also manage file-level backups.

e) Disk Backup (Cloning) – Focus of This Lesson

Clones the entire disk, including partitions, file systems, and data blocks.

Creates a byte-by-byte copy of the disk into an image file or another disk.

Managed using the dd command.

Does not care about file structure — treats disk as raw data.

2. Introduction to dd

The dd command is a low-level copy utility originally created for tape backups in early Unix systems.

Uses:

Clone a full disk.

Copy a partition to another partition or image.

Back up boot sectors.

Generate random data.

Key idea:
dd copies raw blocks, not files. Even unused space is included in the copy.

3. Basic Syntax of dd

dd if=<source> of=<target> [options]

if= → Input file or device (source)

of= → Output file or device (destination)

Examples:

Disk to disk copy:
dd if=/dev/sda of=/dev/sdb

Partition to image:
dd if=/dev/sda1 of=/root/sda1.img

Restore image to partition:
dd if=/root/sda1.img of=/dev/sdb1

4. Rules for Successful Disk Cloning

Destination must be same size or larger than source.
Example: Cloning a 2GB disk to a 1GB disk will fail.

dd copies exact size of the disk, not just used data.

Any existing data on the target will be completely overwritten.

5. Practical Example: Partition to Image

Goal: Back up the /boot partition into an image file stored on /data.

Step 1 – Verify partitions

df -h
Output example:

Filesystem      Size  Used Avail Use% Mounted on
/dev/sda1       1.0G  157M  840M  16% /boot
/dev/sdb1       2.0G   50M  1.9G   3% /data

Here:

/dev/sda1 → /boot partition (source)

/dev/sdb1 → Mounted at /data (storage location)

Step 2 – Run dd to create an image

dd if=/dev/sda1 of=/data/boot.img

This copies the entire /dev/sda1 partition into a file named boot.img inside /data.

Even though only 157M is used, dd copies the full 1.0G size.

Step 3 – Verify image file

ls -lh /data
Output example:

-rw-r--r-- 1 root root 1.1G Sep 4 10:32 boot.img

This shows the cloned partition file.

Step 4 – Restore from image

To restore the partition:
dd if=/data/boot.img of=/dev/sda1

Warning:
This will completely overwrite /dev/sda1.
Only perform this on a lab or recovery system, not production.

6. Disk-to-Disk Cloning

To clone entire disks directly:
dd if=/dev/sda of=/dev/sdb

Example:

/dev/sda → 100GB main disk

/dev/sdb → Blank 100GB backup disk

7. Common Mistakes to Avoid

Forgetting of= → Causes syntax errors.

Copying to a smaller target disk → Clone fails.

Running on a live production system → May corrupt data.

Mixing up if and of → Could overwrite source disk by mistake.

8. Why dd Copies Slowly

dd does raw byte-for-byte copying.

It does not skip free space — even empty blocks are included.

Large disks = longer copy time.

9. Summary of Backup Types

| **Backup Type**    | **Purpose**                          | **Tools**            |
| ------------------ | ------------------------------------ | -------------------- |
| Entire System      | Full OS + data restore               | Veeam, NetBackup     |
| Application Backup | Protect specific application configs | Third-party tools    |
| Database Backup    | Protect data generated by DB         | Dataguard, SQL tools |
| File System Backup | Backup directories and files         | tar, gzip, rsync     |
| Disk Backup        | Clone full disk or partition         | dd command           |

10. Safety Tips

Always run as root.

Double-check source (if=) and target (of=) to avoid data loss.

Practice on lab systems before production.

Consider taking a snapshot of your VM before running dd.

11. Key Example Recap

Backup /boot partition → Image file:
dd if=/dev/sda1 of=/data/boot.img

Restore image → Original partition:
dd if=/data/boot.img of=/dev/sda1

Clone entire disk → Another disk:
dd if=/dev/sda of=/dev/sdb

Final Notes

dd is a powerful but dangerous tool.
It provides a fast way to back up or clone disks without needing extra software, but one wrong command can wipe out entire systems. Always verify commands before hitting Enter.